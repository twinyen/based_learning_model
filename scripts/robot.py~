#!/usr/bin/env python

#robot.py implementation goes here
import rospy
import numpy as np
from read_config import read_config
from astar import astar_path

class robot():
  def __init__(self):
    self.config = read_config()
    self.move_list = self.config['move_list']
    self.map_size = self.config['map_size']
    self.start = self.config['start']
    self.goal = self.config['goal']
    self.walls = self.config['walls']
    self.pits = self.config['pits']
    self.grid = self.create_grid()
  
    rospy.init_node("robot")

  def create_grid(self):
    grid = np.ones(self.map_size)
    for p in self.pits:
      grid[p[0]][p[1]] = 999
    for w in self.walls:
      grid[w[0]][w[1]] = 888
	  
    grid[self.start[0]][self.start[1]] = 0
    grid[self.goal[0]][self.goal[1]] = 0
    return grid

  def print_config(self): 
    print "map_size is: ", self.map_size
    print "start is: ", self.start
    print "goal is: ", self.goal
    print "walls is: ", self.walls
    print "pit is: ", self.pits



if __name__ == '__main__':
  rb = robot()
  #rb.print_config()
  astar_path(rb.grid, rb.start, rb.goal, rb.move_list)
